openapi: 3.0.0
info:
  title: Authentication library
  description: A Java library designed for simplifying authentication in Spring Boot applications.
  version: 1.1.0

servers:
  - url: http://localhost:8080
    description: Servidor local

tags:
  - name: authentication
    description: Operations about authentication

paths:
  /auth/users:
    post:
      tags:
        - authentication
      summary: Register a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signUpRequest'
      responses:
        201:
          description: User registered successfully
        400:
          $ref: '#/components/responses/BadRequestError'
        409:
          $ref: '#/components/responses/ConflictError'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/sessions:
    post:
      tags:
        - authentication
      summary: Log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/signInRequest'
      responses:
        200:
          description: user logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signInResponse'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'

    get:
      tags:
        - authentication
      summary: Logs out current logged in user session
      security:
        - Bearer: []
      parameters: []
      responses:
        200:
          description: successful operation
        401:
          $ref: '#/components/responses/UnauthorizedError'

  /auth/sessions/external:
    post:
      tags:
        - authentication
      summary: External Log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/externalSignInRequest'
      responses:
        200:
          description: user logged successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signInResponse'
        400:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/sessions/refresh-token:
    post:
      tags:
        - authentication
      summary: refresh login on system
      description: ''
      requestBody:
        description: login refresh
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/refreshTokenRequest'
      responses:
        200:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/signInResponse'
        400:
          $ref: '#/components/responses/BadRequestError'
        401:
          $ref: '#/components/responses/UnauthorizedError'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/activate:
    post:
      tags:
        - authentication
      summary: Activate user, with email verification code
      description: ''
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/activateUserRequest'
      responses:
        200:
          description: successful operation
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/change-password:
    post:
      tags:
        - authentication
      summary: Change password for logged user
      description: ''
      security:
        - Bearer: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/changePasswordRequest'
      responses:
        200:
          description: successfully operation
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/InternalServerError'

  /auth/recovery-password:
    post:
      tags:
        - authentication
      summary: Recovery password, to send verification code by email
      description: ''
      operationId: recoveryPasswordGenerate
      security:
        - Bearer: []
      requestBody:
        required: true
        description: login request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recoveryPasswordRequest'

      responses:
        200:
          description: successful operation
        400:
          $ref: '#/components/responses/BadRequestError'
        404:
          $ref: '#/components/responses/NotFoundError'

  /auth/recovery-password/activate:
    post:
      tags:
        - authentication
      summary: Recovery password, to send verification code by email
      description: ''
      operationId: recoveryPasswordActivate
      security:
        - Bearer: []
      requestBody:
        description: login request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/recoveryPasswordActivateRequest'
      responses:
        200:
          description: successful operation
        400:
          $ref: '#/components/responses/BadRequestError'
        500:
          $ref: '#/components/responses/InternalServerError'


components:
  schemas:

    signUpRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    signInRequest:
      type: object
      properties:
        email:
          type: string
        password:
          type: string

    externalSignInRequest:
      type: object
      properties:
        code:
          type: string

    refreshTokenRequest:
      type: object
      properties:
        refresh_token:
          type: string
      required:
        - refresh_token

    activateUserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        verification_code:
          type: string

    changePasswordRequest:
      type: object
      properties:
        password:
          type: string
        old_password:
          type: string

    recoveryPasswordRequest:
      type: object
      properties:
        email:
          type: string
          format: email

    recoveryPasswordActivateRequest:
      type: object
      properties:
        email:
          type: string
          format: email
        verification_code:
          type: string
        password:
          type: string

    signInResponse:
      type: object
      properties:
        token:
          type: string
        expiration_date:
          type: string
        token_type:
          type: string
        refresh_token:
          type: string


  responses:
    ConflictError:
      description: Email not available

    UnauthorizedError:
      description: Invalid credentials

    BadRequestError:
      description: Bad Request

    InternalServerError:
      description: Internal Server Error

    NotFoundError:
      description: Element not found

    ForbiddenError:
      description: No access to this resource

  securitySchemes:

    Bearer:
      type: apiKey
      name: Authorization
      in: header
      description: >-
        Enter the token with the `Bearer: ` prefix, e.g. "Bearer abcde12345".